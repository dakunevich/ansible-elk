input {
  udp {
    port => {{ logstash_syslog_udp_port }}
    receive_buffer_bytes => 16777216
    workers => 16
    type => syslog
  }
  udp {
    port => {{ logstash_huawei_syslog_udp_port }}
    receive_buffer_bytes => 16777216
    workers              => 16
    type => huawei_syslog
  }
  udp {
    port => {{ logstash_netflow_udp_port }}
    codec => netflow
    receive_buffer_bytes => 16777216
    workers              => 16
    type => netflow
  }
}


filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    date {
      match => [ "syslog_timestamp", "MMMM  d HH:mm:ss", "ISO8601" ]
    }
  }

  if [type] == "huawei_syslog" {
    grok {
      #
      # 2014-07-22 11:19:31 sysname %%01SHELL/4/LOGIN(l): access type:console vsys:root user:admin login from con0
      # -The timestamp of the log is 2014-07-22 11:19:31
      # -The host name is sysname
      # -The log is generated by the SHELL module
      # -The log is at level four
      # -The description of the log is that the user admin logins from console
      match => { "message" => "<%{POSINT:syslog_pri}>%{CISCOTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}/%{POSINT:syslog_level}/%{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }

    date {
      match => [ "syslog_timestamp", "MMMM  d yyyy HH:mm:ss", "ISO8601" ]
    }
    mutate {
      replace => [ "host", "%{syslog_hostname}"]
    }
  }
}

output {
  if ([type] == "syslog") {
    elasticsearch {
      hosts => {{ es_hosts_output }}
      index => "{{ es_syslog_index }}"
      document_type => {{ es_syslog_doc_type }}
      manage_template => false
    }
  }
  else if ([type] == "netflow") {
    elasticsearch {
      hosts => {{ es_hosts_output }}
      index => "{{ es_netflow_index }}"
      document_type => {{ es_netflow_doc_type }}
      manage_template => false
    }
  }
  else if ([type] == "huawei_syslog") {
    elasticsearch {
      hosts => {{ es_hosts_output }}
      index => "{{ es_huawei_syslog_index }}"
      document_type => {{ es_huawei_doc_type }}
      manage_template => false
    }
  }
  else {
    elasticsearch {
      hosts => {{ es_hosts_output }}
      index => "{{ es_default_index }}"
      manage_template => false
    }
  }
}
